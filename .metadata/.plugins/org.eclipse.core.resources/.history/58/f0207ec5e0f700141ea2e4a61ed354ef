import java.rmi.server.*;
import java.rmi.*;
import java.util.ArrayList;
 
/**
 * Server object
 * @author http://lycog.com
 */
public class AstheneisObject extends UnicastRemoteObject
        implements IRemoteAstheneis {
 
  public AstheneisObject() throws RemoteException {
    super();
  }
 
  public int update(Astheneis p) {
	    try {
	      System.out.println("Invoke update from " + getClientHost());
	    } catch (ServerNotActiveException snae) {
	      snae.printStackTrace();
	    }
	    return ProvinceRepository.update(p);
	  }
  public Astheneis findById(int criteria) throws ClassNotFoundException {
	    try {
	      System.out.println("Invoke findByName from " + getClientHost());
	    } catch (ServerNotActiveException snae) {
	      snae.printStackTrace();
	    }
	    return ProvinceRepository.findById(criteria);
	  }

  public Astheneis findByFlag(int criteria) throws ClassNotFoundException {
	    try {
	      System.out.println("Invoke findByName from " + getClientHost());
	    } catch (ServerNotActiveException snae) {
	      snae.printStackTrace();
	    }
	    return ProvinceRepository.findByFlag(criteria);
	  }
  public Astheneis findByDead(int criteria) throws ClassNotFoundException {
	    try {
	      System.out.println("Invoke findByName from " + getClientHost());
	    } catch (ServerNotActiveException snae) {
	      snae.printStackTrace();
	    }
	    return ProvinceRepository.findByDead(criteria);
	  }


  /*public int update(Province p) {
    try {
      System.out.println("Invoke update from " + getClientHost());
    } catch (ServerNotActiveException snae) {
      snae.printStackTrace();
    }
    return ProvinceRepository.update(p);
  }
 
  public int delete(Province p) {
    try {
      System.out.println("Invoke delete from " + getClientHost());
    } catch (ServerNotActiveException snae) {
      snae.printStackTrace();
    }
    return ProvinceRepository.delete(p);
  }
 
  public void deleteAll() {
    try {
      System.out.println("Invoke deleteAll from " + getClientHost());
    } catch (ServerNotActiveException snae) {
      snae.printStackTrace();
    }
    ProvinceRepository.deleteAll();
  }
 
  public ArrayList findAll() {
    try {
      System.out.println("Invoke findAll from " + getClientHost());
    } catch (ServerNotActiveException snae) {
      snae.printStackTrace();
    }
    return ProvinceRepository.findAll();
  }*/
 
  public Province findByUsername(String criteria) throws ClassNotFoundException {
    try {
      System.out.println("Invoke findByName from " + getClientHost());
    } catch (ServerNotActiveException snae) {
      snae.printStackTrace();
    }
    return ProvinceRepository.findByUsername(criteria);
  }
}