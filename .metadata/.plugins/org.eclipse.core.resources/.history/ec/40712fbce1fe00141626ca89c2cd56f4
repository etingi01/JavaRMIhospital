
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.sql.Date;
import java.util.ArrayList;

import javax.swing.*;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
 
/**
 * ProvinceClient: client application
 * @author http://lycog.com
 */
public class ProvinceClient {
	public Registry registry;
	public IRemoteProvince rp;
	public IRemoteAstheneis as;
	public IRemoteAstheneisAllergies al;
	public IRemoteAstheneisTravma at;
	public IRemoteComments com;
	public IRemoteWarnings warn;
	public IRemoteRisk risk;
	public IRemoteEidiIpallilwn eidiYpal;
	public IRemoteIstorikoTherapeias istoriko;
	public IRemotePatientAstheneies patientAsth;
	public IRemoteSiggenisAstheni siggenis;
	public IRemoteTherapeia therapeia;
	public IRemoteTherapeiesAstheneies therapeiesAstheneies;
	public  IRemoteConsultation consultation;
	public IRemoteTypeAstheneias typeAsth;
	
	public ProvinceClient() throws RemoteException, NotBoundException{
	       registry = LocateRegistry.getRegistry("127.0.0.1");

	       //Lookup server object
	       rp = (IRemoteProvince) registry.lookup("Province");
	       as = (IRemoteAstheneis) registry.lookup("Astheneis");
	       al = (IRemoteAstheneisAllergies) registry.lookup("AstheneisAllergies");
	       at = (IRemoteAstheneisTravma) registry.lookup("AstheneisTravma");
	       com = (IRemoteComments) registry.lookup("comments");
	       warn= (IRemoteWarnings) registry.lookup("warnings");
	       risk = (IRemoteRisk) registry.lookup("risk");
	       eidiYpal = (IRemoteEidiIpallilwn) registry.lookup("eidiYpallilwn");
	       istoriko = (IRemoteIstorikoTherapeias) registry.lookup("istoriko");
	       patientAsth = (IRemotePatientAstheneies) registry.lookup("patientAstheneies");
	       siggenis = (IRemoteSiggenisAstheni) registry.lookup("siggeneis");
	       therapeia = (IRemoteTherapeia) registry.lookup("therapeia");
	       therapeiesAstheneies = (IRemoteTherapeiesAstheneies) registry.lookup("therapeiaAstheneies");
	       consultation = (IRemoteConsultation) registry.lookup("consult");
	       typeAsth = (IRemoteTypeAstheneias) registry.lookup("typeAstheneias");
	       
	}
	
	
	
  public static void main(String[] args) {
    try {
      //Get reference to rmi registry server
    	//System.setProperty("java.rmi.server.hostname","127.0.0.1");
      /* al = (IRemoteAstheneisAllergies) registry.lookup("AstheneisAllergies");
       at = (IRemoteAstheneisTravma) registry.lookup("AstheneisTravma");
       com = (IRemoteComments) registry.lookup("comments");
      warn= (IRemoteWarnings) registry.lookup("warnings");
       risk = (IRemoteRisk) registry.lookup("risk");
       eidiYpal = (IRemoteEidiIpallilwn) registry.lookup("eidiYpallilwn");
       istoriko = (IRemoteIstorikoTherapeias) registry.lookup("istoriko");
      patientAsth = (IRemotePatientAstheneies) registry.lookup("patientAstheneies");
      siggenis = (IRemoteSiggenisAstheni) registry.lookup("siggeneis");
      therapeia = (IRemoteTherapeia) registry.lookup("therapeia");
      therapeiesAstheneies = (IRemoteTherapeiesAstheneies) registry.lookup("therapeiaAstheneies");
      consultation = (IRemoteConsultation) registry.lookup("consult");
      typeAsth = (IRemoteTypeAstheneias) registry.lookup("typeAstheneias");*/
     
      
      
      //Save province
    	Province bmc = new Province(8282, "rlouka01", "Rafaellita", "Louka", "99394781" , "rafkiola@gmail.com", 2);
      	System.out.println("Saving provinces...");
      //rp.save(bmc);
      	ProvinceClient antikeimeno = new ProvinceClient();

      
	    String user = JOptionPane.showInputDialog(null,"Δώστε το username σας");
	    
	    if (user != null){
	        while ((antikeimeno.rp.findByUsername(user).getPassword()==0) && (user != null)){
	         user = JOptionPane.showInputDialog("Δώσατε μη υπαρκτό username.\n Δώστε ξανά το username σας");

	        }
	        
	        if (user != null){

	            String pass = JOptionPane.showInputDialog("Δώστε τον κωδικό σας");
	            int passwd = Integer.parseInt(pass);
	            int passwordofIpallilos = antikeimeno.rp.findByUsername(user).getPassword();
	            
	            System.out.println(passwordofIpallilos);
	            while ((passwd!=passwordofIpallilos) && (user != null)){
	            user = JOptionPane.showInputDialog("Δώσατε λάθος κωδικό. Επαναλάβετε τη διαδικασία. \n Δώστε το username σας");
	            while ((antikeimeno.rp.findByUsername(user).getPassword()==0)  && (user != null)){
	             user = JOptionPane.showInputDialog("Δώσατε μη υπαρκτό username.\n Δώστε ξανά το username σας");
	            }
	            if (user != null){
	            pass = JOptionPane.showInputDialog("Δώστε τον κωδικό σας");
	            passwd = Integer.parseInt(pass);
	            passwordofIpallilos = antikeimeno.rp.findByUsername(user).getPassword();
	            } 
	            }
	            }
	    }
	        
	        
	    Province ipallilos = new Province();
	    ipallilos=antikeimeno.rp.findByUsername(user);
	    
	    switch (ipallilos.getCodeType()){
	    
	    case 1:
	    		antikeimeno.EpifaneiaReceptionist(ipallilos);
	    		break;
	   /* case 2: EpifaneiaDoctor(ipallilos);
	    		break;
	    case 3: EpifaneiaNurse(ipallilos);
	    		break;
	    case 4: EpifaneiaHealthVisitor(ipallilos);
	    		break;
	    case 5: EpifaneiaMedicalRecordsStaff(ipallilos);
	    		break;
	    case 6: EpifaneiaManagers(ipallilos);
	    		break;*/
	    }
	    
	    

    } catch (Exception e) {
        System.out.println(e);
      }
  }
	public static  int MenuButtons(){
		JFrame fm = new JFrame ("Menu");
	    fm.setLayout( new FlowLayout() );      // set the layout manager
   	    fm.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
   	    JButton appointment = new JButton("Προσθήκη Ραντεβού"); // construct a JButton
	    JButton cChange = new JButton("Προεπισκόπηση Ραντεβού");
	    JButton dChange = new JButton("Αναζήτηση Εγγραφής");
	    JButton eChange = new JButton ("Όλοι οι ασθενείς");
	    JButton fChange = new JButton ("Παραγωγή τελευταίας Συνταγής Ασθενή");
	    JButton gChange = new JButton ("Προβολή προφίλ Φοιτητή - Report");
	    JButton exitChange= new JButton ("Αποθήκευση Αλλαγών και Έξοδος");
		JButton newmeet = new JButton ("Προσθήκη Συνάντησης");
		JButton mademeet = new JButton("Πραγματοποιήθηκε Συνάντηση");
		
	    fm.getContentPane().add(cChange);
	    fm.getContentPane().add(bChange);
	    fm.getContentPane().add(dChange);
	    fm.getContentPane().add(eChange);
	    fm.getContentPane().add(fChange);
	    fm.getContentPane().add(gChange);
	    fm.getContentPane().add(newmeet);
	    fm.getContentPane().add(mademeet);
	    fm.getContentPane().add(exitChange);
	    
	    fm.pack();
   	    fm.setSize( 500, 500);     
   	    fm.setVisible( true ); 
   	 newmeet.addActionListener(new ActionListener() {
	    	
            public void actionPerformed(ActionEvent e)
            {
            	newMeet();
            }
        });  
   	 mademeet.addActionListener(new ActionListener() {
	    	
            public void actionPerformed(ActionEvent e)
            {
            	madeMeet();
            }
        });  
   	 
	    bChange.addActionListener(new ActionListener() {
	    	
            public void actionPerformed(ActionEvent e)
            {
            	bChange();
                System.out.println("Irthe edw");
            }
        });  
	    cChange.addActionListener(new ActionListener() {
	    	 
            public void actionPerformed(ActionEvent e)
            {
                //Execute when button is pressed
            	cChange();
               System.out.println("prosthiki");
            }
        });  
	    dChange.addActionListener(new ActionListener() {
	    	 
            public void actionPerformed(ActionEvent e)
            {
            	dChange();
            }
        });  
	    eChange.addActionListener(new ActionListener() {
	    	 
            public void actionPerformed(ActionEvent e)
            {
            	eChange();
            }
        });  
	    fChange.addActionListener(new ActionListener() {
	    	 
            public void actionPerformed(ActionEvent e)
            {
            	fChange();
            }
        });  
	    gChange.addActionListener(new ActionListener() {
	    	 
            public void actionPerformed(ActionEvent e)
            {
            	gChange();
            }
        });  
	    exitChange.addActionListener(new ActionListener() {
	    	 
            public void actionPerformed(ActionEvent e)
            {
            	try {
	            	File file = new File("savefile.txt");
		            FileOutputStream is = new FileOutputStream(file);
		            OutputStreamWriter osw = new OutputStreamWriter(is);    
		            Writer w = new BufferedWriter(osw);
		            w.write(nameP + "\r\n" + surnameP + "\r\n" + passwordP + "\r\n" + "##\r\n");
		            for (int i = 0; i<September.size(); i++){
		            	w.write(September.get(i).getDay()+"\r\n");
		            }
		            w.write("##o\r\n");
		            for (int i = 0; i<October.size(); i++){
		            	w.write(October.get(i).getDay()+"\r\n");
		            }
		            w.write("##n\r\n");
		            for (int i = 0; i<November.size(); i++){
		            	w.write(November.get(i).getDay()+"\r\n");
		            }
		            w.write("telosminwn\r\n");
		            for(Student d:Students){
		            	String nf = d.getStProject().getFile().getNameFile();
		            	System.out.println("nf: " + nf);
		            	if(nf==""){
		            		nf = "not";
		            	}
		            	String af = d.getStProject().getFile().getAddressFile();
		            	if(af==""){
		            		af = "not";
		            	}
		            	String df = d.getStProject().getFile().getDescription();
		            	if(df==""){
		            		df="not";
		            	}
		            	w.write(d.getName() + "~" + d.getSurname() + "~" + d.getAm() + "~" + d.getIntroYear() + "~" + d.getTel() + "~" + 
		            d.getMail() + "~" + d.getFilalGrade() + "~" + d.getDateLastMet() + "~" + d.getDateNextMeet()+"~" + d.getStProject().getTitle() + "~"
		            + d.getStProject().getDescription()+ "~" + d.getStProject().getProgLan()+"~"+d.getStProject().getStep()+"~"+nf+"~"+
		            af+"~"+df+"\r\n");
		            }
		            w.write("telos");
		            w.close();
	            	} catch (IOException d) {
	            	        System.err.println("Problem writing to the file statsTest.txt");
	            	    }
            	System.exit(0);
            }
        });  
	    return exit;
	}
  public void EpifaneiaReceptionist(Province ipallilos){
	  
	  
  }
}